{"version":3,"sources":["components/header/Header.js","components/limitOfquestions/LimitOfquestions.js","components/alerts/DangerAlert.js","components/alerts/SuccesAlert.js","components/alerts/EndTestAlert.js","components/soundOnOff/SoundOnOff.js","components/refreshQuiz/RefreshQuiz.js","components/quiz/Quiz.js","components/choiceTest/ChoiceTest.js","components/footer/Footer.js","components/wrongAnswers/WrongAnswers.js","sound/oklaski.mp3","sound/smiech.mp3","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","limitOfquestions","maxQuestions","handleChangeLimit","htmlFor","type","id","value","onChange","min","max","currentTest","length","children","DangerAlert","answers","corectAnswer","nextQuestion","style","transform","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","AcceptAlert","width","height","EndTestAlert","correctAnswers","inCorrectAnswers","colorSend","Math","round","color","SoundOnOff","handleClickAudio","audio","xmlns","clipRule","Refresh","refreshPage","points","Quiz","currentQuestion","isDisabled","answerChange","question","image","src","alt","content","map","answer","index","el","disabled","ChoiceTest","handleTest","test","questionslimit","name","checked","Footer","href","target","rel","cx","cy","r","x1","y1","x2","y2","WrongAnswers","wrongAnswers","console","log","items","correct","App","useState","setCurrentTest","setCurrentQuestion","setMaxQuestions","endTest","setEndTest","setAudioOn","setCorectAnswers","setInCorrectAnswers","saveInCorrectAnswers","setSaveInCorrectAnswers","dangerAlert","setDangerAlert","succesAlert","setSuccesAlert","setIsDisabled","setTest","allLimit","setAllLimit","inspiroLimit","setInspiroLimit","sygnalizacjaLimit","setSygnalizacjaLimit","najnowszeLimit","setNajnowszeLimit","setWrongAnswers","showWrongAnswers","setShowWrongAnswers","sound","Audio","oklaski","sound2","smiech","document","querySelector","classList","remove","window","location","reload","useEffect","startApp","data","drawData","expr","arr","counter","arr2","arr3","i","floor","random","push","splice","alert","draw","getQuizData","a","fetch","response","json","all","inspiro","sygnalizacja","linia2","LimitOfquestions","event","Number","e","answerUser","answerDiv","currentTarget","play","add","SuccesAlert","display","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e425f886.chunk.js","sourcesContent":["const Header = (props) => {\r\n\r\n    return (\r\n        <header className=\"text-center\">\r\n            <h2 className=\"text-3xl p-5 md:text-4xl md:p-10 text-center\">Test okresowy dla maszynistów metra</h2>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","const limitOfquestions = (props) => {\r\n    const { maxQuestions, handleChangeLimit } = props;\r\n    return (\r\n        <div className=\"m-5\">\r\n            <label htmlFor=\"counter\" className=\"text-yellow-400 text-xl\">Ustaw ilość pytań z puli:</label>\r\n            <input className=\"block text-center rounded-3xl text-2xl text-black mt-3 m-auto\" type=\"number\" id=\"counter\" value={maxQuestions} onChange={handleChangeLimit} min=\"0\" max={props.currentTest.length} />\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default limitOfquestions;","const DangerAlert = (props) => {\r\n    const { answers, corectAnswer, nextQuestion } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"danger fixed left-1/2 top-1/2 p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-90\" style={{ transform: \"translate(-50%,-50%)\" }}>\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white animateBounce\">\r\n                    <svg className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"mt-2 px-7 py-3\">\r\n                    <p className=\" text-white text-xl\">\r\n                        Odp. prawidłowa nr. {corectAnswer + 1}\r\n                    </p>\r\n                    <p className=\" text-green-400 text-xl font-bold\">\r\n                        {answers[corectAnswer]}\r\n                    </p>\r\n                </div>\r\n                <div className=\"items-center px-4 py-3\">\r\n                    <button onClick={nextQuestion}\r\n                        id=\"ok-btn\"\r\n                        className=\"px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300\">\r\n                        Następne\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DangerAlert;","import Confetti from 'react-confetti';\r\nconst AcceptAlert = (props) => {\r\n    const { nextQuestion } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed left-1/2 top-1/2 p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-90 overflow-hidden\" style={{ transform: \"translate(-50%,-50%)\" }}>\r\n            <Confetti\r\n                width={300}\r\n                height={200}\r\n            />\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"relative mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white animateBounce\">\r\n                    <svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"items-center px-4 py-3 my-5\">\r\n                    <button onClick={nextQuestion}\r\n                        id=\"ok-btn\"\r\n                        className=\"px-4 py-2 bg-green-600 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-300\">\r\n                        Następne\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcceptAlert;","import Confetti from 'react-confetti';\r\nconst EndTestAlert = (props) => {\r\n    const { correctAnswers, inCorrectAnswers, maxQuestions, colorSend } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed left-1/2 top-1/2 p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-80 overflow-hidden\" style={{ transform: \"translate(-50%,-50%)\" }}>\r\n            <div className=\"mt-3 text-center\">\r\n                {(Math.round(correctAnswers / maxQuestions * 100) >= 75) ? <Confetti width=\"300\" /> : \"\"}\r\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white\">\r\n                    {(Math.round(correctAnswers / maxQuestions * 100) >= 75) ?\r\n                        <svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\r\n                        </svg>\r\n                        : <svg className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\r\n                        </svg>\r\n                    }\r\n                </div>\r\n                <h3 className=\"text-xl leading-6 font-medium text-white m-5\">{(Math.round(correctAnswers / maxQuestions * 100) >= 75) ? \"Zaliczone!!!\" : \"Oblałeś :(\"}</h3>\r\n                <div className=\"mt-2 px-7 py-3\">\r\n                    <div className=\" text-white text-xl\">\r\n                        <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\r\n                            {correctAnswers + inCorrectAnswers} / {maxQuestions}\r\n                        </div>\r\n                        <div className=\"flex items-baseline justify-center text-3xl bg-white rounded-full max-w-xs mx-auto m-5\">\r\n                            <span style={{ color: 'green' }}>{correctAnswers}:</span><span style={{ color: 'red' }}>{inCorrectAnswers}</span>\r\n                        </div>\r\n                        <div className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full max-w-xs mx-auto m-5`}>{Math.round(correctAnswers / maxQuestions * 100)}%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EndTestAlert;","const SoundOnOff = (props) => {\r\n    return (\r\n        <button className=\"rounded-full flex items-center justify-center bg-gray-700 text-white font-bold p-2 m-5 w-10 h-10\" onClick={props.handleClickAudio}>{props.audio ? <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\r\n        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" />\r\n        </svg>}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SoundOnOff;","const Refresh = (props) => {\r\n    return (\r\n        <button className=\"rounded-full m-5 bg-gray-700 p-2 w-10 h-10\" onClick={props.refreshPage}>\r\n            <svg className=\"h-6 w-6 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <polyline points=\"23 4 23 10 17 10\" />  <polyline points=\"1 20 1 14 7 14\" />  <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" /></svg>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Refresh;","const Quiz = (props) => {\r\n\r\n    const { currentTest, currentQuestion, isDisabled, answerChange } = props;\r\n    return (\r\n        <>\r\n            <div className=\"p-5 text-2xl text-center bg-yellow-500 text-gray-800 rounded-3xl max-w-xl mx-auto m-5 font-bold\">\r\n                {currentTest[currentQuestion]?.question}\r\n                <div className=\"my-5\">{currentTest[currentQuestion]?.image ? <img src={`./${currentTest[currentQuestion]?.image}`} alt=\"\" className=\"mx-auto\" /> : \"\"}</div>\r\n            </div>\r\n            {props.children}\r\n            <div className=\"container max-w-md p-3 mx-auto\">\r\n                {currentTest[currentQuestion]?.content.map((answer, index) =>\r\n                    <button\r\n                        key={index}\r\n                        className=\"flex cursor-pointer m-5 answer items-center justify-left rounded-3xl bg-blue-800 mx-auto w-full\"\r\n                        onClick={(el) => answerChange(index, el)}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        <div className=\"rounded-full h-10 w-10 flex items-center justify-center bg-blue-500 text-white p-4\">\r\n                            {index + 1}\r\n                        </div>\r\n                        <div className=\"py-2 px-4 text-white text-left\">\r\n                            {answer}\r\n                        </div>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;","const ChoiceTest = (props) => {\r\n    const { handleTest, test, questionslimit } = props;\r\n    return (\r\n        <form className=\"mt-4\">\r\n            <span className=\"text-yellow-400 text-xl\">Wybór zakresu pytań:</span>\r\n            <div className=\"mt-2\">\r\n                <label className=\"inline-flex items-center\">\r\n                    <input type=\"radio\" className=\"form-radio\" name=\"choiceTest\" value=\"all\" checked={test === \"all\"} onChange={handleTest} />\r\n                    <span className=\"ml-2\">Wszystko ({questionslimit[0]})</span>\r\n                </label>\r\n                <label className=\"inline-flex items-center ml-3\">\r\n                    <input type=\"radio\" className=\"form-radio\" name=\"choiceTest\" value=\"inspiro\" checked={test === \"inspiro\"} onChange={handleTest} />\r\n                    <span className=\"ml-2\">Inspiro ({questionslimit[1]})</span>\r\n                </label>\r\n                <label className=\"inline-flex items-center ml-3\">\r\n                    <input type=\"radio\" className=\"form-radio\" name=\"choiceTest\" value=\"sygnalizacja\" checked={test === \"sygnalizacja\"} onChange={handleTest} />\r\n                    <span className=\"ml-2\">Sygnalizacja ({questionslimit[2]})</span>\r\n                </label>\r\n                <label className=\"inline-flex items-center ml-3\">\r\n                    <input type=\"radio\" className=\"form-radio\" name=\"choiceTest\" value=\"linia2\" checked={test === \"linia2\"} onChange={handleTest} />\r\n                    <span className=\"ml-2\">Linia nr 2 ({questionslimit[3]})</span>\r\n                </label>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ChoiceTest;","const Footer = () => {\r\n    return (\r\n        <footer className=\"text-center text-white mt-8 text-opacity-20\" >\r\n            <p className=\"block text-xs\">* Test może zawierać błędne odpowiedzi.</p>\r\n            <p className=\"block\"> &copy; pablop76 2021 <a href=\"mailto:pawelpoltoraczyk@gmail.com\" className=\"block\">@kontakt</a></p>\r\n            <a href=\"https://web-service.com.pl/\" target=\"_blank\" rel=\"noreferrer\"><svg className=\"inline-block mx-auto h-4 w-4 text-gray-700\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />  <circle cx=\"12\" cy=\"12\" r=\"9\" /><line x1=\"3.6\" y1=\"9\" x2=\"20.4\" y2=\"9\" /><line x1=\"3.6\" y1=\"15\" x2=\"20.4\" y2=\"15\" /><path d=\"M11.5 3a17 17 0 0 0 0 18\" />  <path d=\"M12.5 3a17 17 0 0 1 0 18\" /></svg>web-service</a>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","const WrongAnswers = (props) => {\r\n    const { wrongAnswers } = props;\r\n    console.log(wrongAnswers);\r\n\r\n    const items = wrongAnswers.map((el, index) => {\r\n        return <li key={`wrongAnswer${index}`} className={\"m-3 text-left\"}>\r\n            <h3 className={\"text-xl\"}>{el.question}</h3>\r\n            {el.image ? <img src={el.image} alt=\"\" className={\"mx-auto\"} /> : \"\"}\r\n            <p className={\"text-green-300 text-xl m-2\"}>{el.content[el.correct]}</p></li>\r\n    })\r\n    return (\r\n        <div className={\"text-white m-auto bg-blue-800 text-center p-5 rounded-3xl\"}>\r\n            {wrongAnswers.length ? <h2 className={\"text-2xl text-red-600 p-4\"}>Błędne odpowiedzi</h2> : <h2 className={\"text-2xl text-green-300 p-4\"} > Wszystkie odpowiedzi były prawidłowe. GRATULACJE!!!</h2>}\r\n            <ol>\r\n                {items}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WrongAnswers;","export default __webpack_public_path__ + \"static/media/oklaski.a169772f.mp3\";","export default __webpack_public_path__ + \"static/media/smiech.474fb074.mp3\";","import Header from \"./components/header/Header\";\nimport LimitOfquestions from \"./components/limitOfquestions/LimitOfquestions\";\nimport DangerAlert from \"./components/alerts/DangerAlert\";\nimport SuccesAlert from \"./components/alerts/SuccesAlert\";\nimport EndTestAlert from \"./components/alerts/EndTestAlert\";\nimport SoundOnOff from \"./components/soundOnOff/SoundOnOff.js\";\nimport Refresh from \"./components/refreshQuiz/RefreshQuiz.js\";\nimport Quiz from \"./components/quiz/Quiz.js\";\nimport ChoiceTest from \"./components/choiceTest/ChoiceTest\";\nimport Footer from \"./components/footer/Footer\";\nimport WrongAnswers from \"./components/wrongAnswers/WrongAnswers\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport oklaski from './sound/oklaski.mp3';\nimport smiech from './sound/smiech.mp3';\n\nfunction App() {\n\n  const [currentTest, setCurrentTest] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [maxQuestions, setMaxQuestions] = useState(0);\n  const [endTest, setEndTest] = useState(false);\n  const [audio, setAudioOn] = useState(false);\n  const [correctAnswers, setCorectAnswers] = useState(0);\n  const [inCorrectAnswers, setInCorrectAnswers] = useState(0);\n  const [saveInCorrectAnswers, setSaveInCorrectAnswers] = useState([]);\n  const [dangerAlert, setDangerAlert] = useState(false);\n  const [succesAlert, setSuccesAlert] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [test, setTest] = useState(\"all\");\n  const [allLimit, setAllLimit] = useState(0);\n  const [inspiroLimit, setInspiroLimit] = useState(0);\n  const [sygnalizacjaLimit, setSygnalizacjaLimit] = useState(0);\n  const [najnowszeLimit, setNajnowszeLimit] = useState(0);\n  // zapisuje błedne odpowiedzi ale jeszcze nic z nimi nie robi\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [showWrongAnswers, setShowWrongAnswers] = useState(false);\n  // ustawienie tematu testu\n  const handleTest = (e) => {\n    setTest(e.target.value);\n  }\n\n  // Losowanie pytań od 0 do długość tablicy\n  const draw = (arr, counter) => {\n    const arr2 = [...arr];\n    const arr3 = [];\n    if (arr2.length >= counter) {\n      for (let i = 0; i < counter; i++) {\n        let index = Math.floor(Math.random() * arr2.length);\n        arr3.push(arr2[index]);\n        arr2.splice(index, 1);\n      }\n    } else {\n      alert(\"Nie ma tyle pytań w puli\");\n      return;\n    }\n    return arr3;\n  }\n  const sound = new Audio(oklaski);\n  const sound2 = new Audio(smiech);\n\n  const answerChange = (answerUser, el) => {\n\n    if (currentQuestion >= maxQuestions + 1) return;\n    setIsDisabled(true);\n    let answerDiv = el.currentTarget;\n\n    if (answerUser === currentTest[currentQuestion].correct) {\n      if (audio) sound.play();\n      setCorectAnswers(correctAnswers + 1);\n      answerDiv.classList.add(\"current\");\n      setSuccesAlert(true);\n\n    } else {\n      if (audio) sound2.play();\n      answerDiv.classList.add(\"wrong\");\n      setDangerAlert(true);\n      if (inCorrectAnswers + correctAnswers < maxQuestions) {\n        setInCorrectAnswers(inCorrectAnswers + 1);\n        // zbieranie niepoprawnych odpowiedzi\n        setSaveInCorrectAnswers([...saveInCorrectAnswers, currentTest[currentQuestion]]);\n      }\n      setWrongAnswers([...wrongAnswers, currentTest[currentQuestion]])\n    }\n\n  }\n\n  const nextQuestion = () => {\n    if (currentQuestion + 1 === maxQuestions) {\n      setDangerAlert(false);\n      setSuccesAlert(false);\n      setEndTest(true);\n      return;\n    };\n    setCurrentQuestion(currentQuestion + 1);\n    document.querySelector(\".wrong\")?.classList.remove(\"wrong\");\n    document.querySelector(\".current\")?.classList.remove(\"current\");\n    setDangerAlert(false);\n    setSuccesAlert(false);\n    setIsDisabled(false);\n  }\n\n  const handleChangeLimit = event => {\n    let { value, min, max } = event.target;\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n    if (value === 0) {\n      setMaxQuestions(\"\");\n      return;\n    }\n    setMaxQuestions(value)\n  };\n\n  const handleClickAudio = () => {\n    setAudioOn(!audio);\n  };\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  let colorSend = (() => {\n    if (Math.round(correctAnswers / maxQuestions * 100) >= 75) {\n      return \"bg-green-700\";\n    }\n    return \"bg-red-600\";\n  })();\n\n\n  useEffect(() => {\n    const startApp = (data, drawData, expr) => {\n      drawData = draw(data[expr], data[expr].length);\n      setCurrentTest(drawData);\n      setMaxQuestions(data[expr].length);\n      setCorectAnswers(0);\n      setInCorrectAnswers(0);\n    }\n    const getQuizData = async (expr) => {\n\n      const response = await fetch('./questions.json');\n      const data = await response.json();\n      setAllLimit(data.all.length);\n      setInspiroLimit(data.inspiro.length);\n      setSygnalizacjaLimit(data.sygnalizacja.length);\n      setNajnowszeLimit(data.linia2.length);\n\n      let drawData = [];\n      switch (expr) {\n        case 'inspiro':\n          startApp(data, drawData, expr);\n          break;\n        case 'sygnalizacja':\n          startApp(data, drawData, expr);\n          break;\n        case 'linia2':\n          startApp(data, drawData, expr);\n          break;\n        default:\n          startApp(data, drawData, expr);\n      }\n\n    }\n    getQuizData(test);\n  }, [test]);\n\n  return (\n    <div className=\"bg-container container mx-auto min-h-screen pb-5 flex flex-col content-center justify-center text-blue-50\">\n      <Header />\n      <div className=\"flex justify-center\">\n        <SoundOnOff handleClickAudio={handleClickAudio} audio={audio} />\n        <Refresh refreshPage={refreshPage} />\n      </div>\n      <div className=\"flex justify-center text-white flex-wrap bg-overlay-top flex-grow\">\n        <div className=\"text-center\">\n          <LimitOfquestions handleChangeLimit={handleChangeLimit} maxQuestions={maxQuestions} currentTest={currentTest} >\n            <ChoiceTest handleTest={handleTest} test={test} questionslimit={[allLimit, inspiroLimit, sygnalizacjaLimit, najnowszeLimit]} />\n          </LimitOfquestions>\n        </div>\n      </div>\n      {showWrongAnswers ? <WrongAnswers wrongAnswers={wrongAnswers} /> :\n        <Quiz currentTest={currentTest} currentQuestion={currentQuestion} answerChange={answerChange} isDisabled={isDisabled}>\n          {dangerAlert ? <DangerAlert answers={currentTest[currentQuestion].content} corectAnswer={currentTest[currentQuestion].correct} nextQuestion={nextQuestion} /> : \"\"}\n          {succesAlert ? <SuccesAlert nextQuestion={nextQuestion} /> : \"\"}\n          {endTest ? <EndTestAlert correctAnswers={correctAnswers} inCorrectAnswers={inCorrectAnswers} maxQuestions={maxQuestions} colorSend={colorSend}>\n            <div className={\"mx-auto\"}>\n              <Refresh refreshPage={refreshPage} />\n            </div>\n            <button className={\"bg-blue-700 hover:bg-blue-500 text-white font-bold py-2 px-4 rounded\"} onClick={() => {\n              setShowWrongAnswers(true);\n              setEndTest(false)\n            }}>Pokaż błędne odpowiedzi</button>\n          </EndTestAlert> : \"\"};\n        </Quiz>}\n      <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\n        odpowiedzi {correctAnswers + inCorrectAnswers} / {maxQuestions}\n      </div>\n      <div className=\"flex items-center justify-center text-3xl bg-white rounded-full w-auto p-2 m-5 mx-auto\">\n        <span style={{ color: 'green', display: 'flex', alignItems: 'center' }}><svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\n        </svg>{correctAnswers}:</span><span style={{ color: 'red', display: 'flex', alignItems: 'center' }}>{inCorrectAnswers}<svg className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\n        </svg></span>\n      </div>\n      <div className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full w-32 m-5 mx-auto p-2`}>{maxQuestions ? Math.round(correctAnswers / maxQuestions * 100) : \"\"}%</div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}