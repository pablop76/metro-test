{"version":3,"sources":["components/header/Header.js","components/limitOfquestions/LimitOfquestions.js","components/alerts/DangerAlert.js","components/soundOnOff/SoundOnOff.js","components/refreshQuiz/RefreshQuiz.js","components/quiz/Quiz.js","sound/oklaski.mp3","sound/smiech.mp3","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","limitOfquestions","htmlFor","type","id","value","maxQuestions","onChange","handleChangeLimit","min","max","currentTest","length","DangerAlert","role","description","SoundOnOff","onClick","handleClickAudio","audio","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","clipRule","Refresh","refreshPage","points","Quiz","currentQuestion","isDisabled","question","image","src","alt","children","content","map","answer","index","el","answerChange","disabled","App","useState","setCurrentTest","setCurrentQuestion","setMaxQuestions","setAudioOn","correctAnswers","setCorectAnswers","inCorrectAnswers","setInCorrectAnswers","dangerAlert","setDangerAlert","setIsDisabled","sound","Audio","oklaski","sound2","smiech","getQuizData","a","fetch","response","json","data","test","questions","console","log","colorSend","Math","round","useEffect","LimitOfquestions","event","target","Number","window","location","reload","answerUser","answerDiv","currentTarget","firstChild","correct","play","classList","add","setTimeout","remove","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec57e59f.chunk.js","sourcesContent":["const Header = (props) => {\r\n    return (\r\n        <h2 className=\"text-3xl p-5 md:text-4xl md:p-10 text-center\">Test okresowy dla maszynistów metra</h2>\r\n    );\r\n}\r\n\r\nexport default Header;","const limitOfquestions = (props) => {\r\n    return (\r\n        <div className=\"m-5\">\r\n            <label htmlFor=\"counter\" className=\"text-xl\">Z ilu pytań chcesz się sprawdzić?</label>\r\n            <input className=\"block text-center rounded-3xl text-2xl text-black mt-3\" type=\"number\" id=\"counter\" value={props.maxQuestions} onChange={props.handleChangeLimit} min=\"0\" max={props.currentTest.length} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default limitOfquestions;","const DangerAlert = (props) => {\r\n    return (\r\n        <div className=\"bg-indigo-900 text-center py-4 lg:px-4\">\r\n            <div className=\"p-2 bg-indigo-500 items-center text-indigo-100 leading-none lg:rounded-full flex lg:inline-flex\" role=\"alert\">\r\n                <span className=\"flex rounded-full bg-red-500 uppercase px-2 py-1 text-xs font-bold mr-3\">Źle !!!</span>\r\n                <span className=\"font-semibold mr-2 text-left flex-auto\">Prawidłowa odpowiedż to {props.description}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DangerAlert;","const SoundOnOff = (props) => {\r\n    return (\r\n        <button className=\"rounded-full flex items-center justify-center bg-gray-700 text-white font-bold p-2 m-5\" onClick={props.handleClickAudio}>{props.audio ? <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\r\n        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" />\r\n        </svg>}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SoundOnOff;","const Refresh = (props) => {\r\n    return (\r\n        <button className=\"rounded-full m-5 bg-gray-700 p-2\" onClick={props.refreshPage}>\r\n            <svg className=\"h-6 w-6 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <polyline points=\"23 4 23 10 17 10\" />  <polyline points=\"1 20 1 14 7 14\" />  <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" /></svg>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Refresh;","const Quiz = (props) => {\r\n\r\n    const { currentTest, currentQuestion, isDisabled } = props;\r\n    return (\r\n        <>\r\n            <div className=\"p-6 text-2xl text-center bg-yellow-500 text-gray-800 rounded-full max-w-xl mx-auto m-5 font-bold\">\r\n                {currentTest[currentQuestion]?.question}\r\n                {currentTest[currentQuestion]?.image ? <img src={`./${currentTest[currentQuestion]?.image}`} alt=\"\" className=\"mx-auto\" /> : \"\"}\r\n            </div>\r\n            {props.children}\r\n            <div className=\"container max-w-md p-3 mx-auto\">\r\n                {currentTest[currentQuestion]?.content.map((answer, index) =>\r\n                    <button\r\n                        key={index}\r\n                        className=\"flex cursor-pointer m-5\"\r\n                        onClick={(el) => props.answerChange(index, el)}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        <div className={`flex items-center justify-center rounded-full bg-blue-500 p-5`}>\r\n                            <div className=\"rounded-full h-10 w-10 flex items-center justify-center bg-gray-700 text-white font-bold p-4\">\r\n                                {index + 1}\r\n                            </div>\r\n                            <div className=\"py-2 px-4 text-white font-semibold text-left\">\r\n                                {answer}\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;","export default __webpack_public_path__ + \"static/media/oklaski.a169772f.mp3\";","export default __webpack_public_path__ + \"static/media/smiech.474fb074.mp3\";","import Header from \"./components/header/Header\";\nimport LimitOfquestions from \"./components/limitOfquestions/LimitOfquestions\";\nimport DangerAlert from \"./components/alerts/DangerAlert\";\nimport SoundOnOff from \"./components/soundOnOff/SoundOnOff.js\";\nimport Refresh from \"./components/refreshQuiz/RefreshQuiz.js\";\nimport Quiz from \"./components/quiz/Quiz.js\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport oklaski from './sound/oklaski.mp3';\nimport smiech from './sound/smiech.mp3';\n\nfunction App() {\n\n  const [currentTest, setCurrentTest] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [maxQuestions, setMaxQuestions] = useState(\"30\");\n  const [audio, setAudioOn] = useState(false);\n  const [correctAnswers, setCorectAnswers] = useState(0);\n  const [inCorrectAnswers, setInCorrectAnswers] = useState(0);\n  const [dangerAlert, setDangerAlert] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const sound = new Audio(oklaski);\n  const sound2 = new Audio(smiech);\n  const getQuizData = async () => {\n    const response = await fetch('./questions.json');\n    const data = await response.json();\n    setCurrentTest(data.test[0].questions)\n    console.log(data.test[0].questions[0].length);\n  }\n  const answerChange = (answerUser, el) => {\n    if (currentQuestion >= maxQuestions) return;\n    setIsDisabled(true);\n    let answerDiv = el.currentTarget.firstChild;\n\n    if (answerUser === currentTest[currentQuestion].correct) {\n      if (audio) sound.play();\n      setCorectAnswers(correctAnswers + 1);\n      answerDiv.classList.add(\"current\");\n\n    } else {\n      if (audio) sound2.play();\n      answerDiv.classList.add(\"wrong\");\n      setDangerAlert(true);\n      if (inCorrectAnswers + correctAnswers < maxQuestions) {\n        setInCorrectAnswers(inCorrectAnswers + 1);\n      }\n    }\n\n    setTimeout(() => {\n      if (currentQuestion >= maxQuestions - 1) return;\n      setCurrentQuestion(currentQuestion + 1);\n      answerDiv.classList.remove(\"current\", \"wrong\");\n      setDangerAlert(false);\n      setIsDisabled(false);\n    }, 5000);\n  }\n\n  const handleChangeLimit = event => {\n    let { value, min, max } = event.target;\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n    if (value === 0) {\n      setMaxQuestions(\"\");\n      return;\n    }\n    setMaxQuestions(value)\n  };\n\n  const handleClickAudio = () => {\n    setAudioOn(!audio);\n  };\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  let colorSend = (() => {\n    if (Math.round(correctAnswers / maxQuestions * 100) >= 60) {\n      return \"current\";\n    }\n    return \"wrong\";\n  })();\n\n  useEffect(() => getQuizData(), [])\n  return (\n    <div className=\"bg-container container mx-auto min-h-screen pb-5\">\n      <div className=\"flex items-baseline justify-center bg-gray-900 text-white flex-wrap bg-overlay-top\">\n        <LimitOfquestions handleChangeLimit={handleChangeLimit} maxQuestions={maxQuestions} currentTest={currentTest} />\n        <Header />\n        <SoundOnOff handleClickAudio={handleClickAudio} audio={audio} />\n        <Refresh refreshPage={refreshPage} />\n      </div>\n      <Quiz currentTest={currentTest} currentQuestion={currentQuestion} answerChange={answerChange} isDisabled={isDisabled}>\n        {dangerAlert ? <DangerAlert description={currentTest[currentQuestion].correct + 1} /> : \"\"}\n      </Quiz>\n      <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\n        odpowiedzi {correctAnswers + inCorrectAnswers} / {maxQuestions}\n      </div>\n      <div className=\"flex items-baseline justify-center text-3xl bg-white rounded-full max-w-xs mx-auto m-5\">\n        <span style={{ color: 'green' }}>{correctAnswers}:</span><span style={{ color: 'red' }}>{inCorrectAnswers}</span>\n      </div>\n      <div className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full max-w-xs mx-auto m-5`}>{maxQuestions ? Math.round(correctAnswers / maxQuestions * 100) : \"\"}%</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}