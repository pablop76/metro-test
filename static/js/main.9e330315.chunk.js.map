{"version":3,"sources":["components/header/Header.js","components/limitOfquestions/LimitOfquestions.js","components/alerts/DangerAlert.js","components/soundOnOff/SoundOnOff.js","components/refreshQuiz/RefreshQuiz.js","components/quiz/Quiz.js","sound/oklaski.mp3","sound/smiech.mp3","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","limitOfquestions","htmlFor","type","id","value","maxQuestions","onChange","handleChangeLimit","min","max","currentTest","length","DangerAlert","answers","corectAnswer","class","fill","viewBox","stroke","d","SoundOnOff","onClick","handleClickAudio","audio","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","clipRule","Refresh","refreshPage","points","Quiz","currentQuestion","isDisabled","question","image","src","alt","children","content","map","answer","index","el","answerChange","disabled","App","useState","setCurrentTest","setCurrentQuestion","setMaxQuestions","setAudioOn","correctAnswers","setCorectAnswers","inCorrectAnswers","setInCorrectAnswers","dangerAlert","setDangerAlert","setIsDisabled","draw","arr","counter","arr2","arr3","i","Math","floor","random","push","splice","alert","sound","Audio","oklaski","sound2","smiech","colorSend","round","useEffect","getQuizData","a","fetch","response","json","data","drawData","questions","LimitOfquestions","event","target","Number","window","location","reload","answerUser","answerDiv","currentTarget","firstChild","correct","play","classList","add","setTimeout","remove","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e330315.chunk.js","sourcesContent":["const Header = (props) => {\r\n    return (\r\n        <h2 className=\"text-3xl p-5 md:text-4xl md:p-10 text-center\">Test okresowy dla maszynistów metra</h2>\r\n    );\r\n}\r\n\r\nexport default Header;","const limitOfquestions = (props) => {\r\n    return (\r\n        <div className=\"m-5\">\r\n            <label htmlFor=\"counter\" className=\"text-xl\">Z ilu pytań chcesz się sprawdzić?</label>\r\n            <input className=\"block text-center rounded-3xl text-2xl text-black mt-3 m-auto\" type=\"number\" id=\"counter\" value={props.maxQuestions} onChange={props.handleChangeLimit} min=\"0\" max={props.currentTest.length} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default limitOfquestions;","const DangerAlert = (props) => {\r\n    const { answers, corectAnswer } = props;\r\n\r\n    return (\r\n        <div\r\n            class=\"relative top-20 mx-auto p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-80\">\r\n            <div class=\"mt-3 text-center\">\r\n                <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-500\">\r\n                    <svg class=\"h-8 w-8 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                </div>\r\n                <h3 class=\"text-xl leading-6 font-medium text-gray-900 m-5\">Błąd!</h3>\r\n                <div class=\"mt-2 px-7 py-3\">\r\n                    <p class=\" text-white text-xl\">\r\n                        Prawidłowa odpowiedź to {corectAnswer + 1}\r\n                    </p>\r\n                    <p class=\" text-green-400 text-xl font-bold\">\r\n                        {answers[corectAnswer]}\r\n                    </p>\r\n                </div>\r\n                {/* <div class=\"items-center px-4 py-3\">\r\n                    <button\r\n                        id=\"ok-btn\"\r\n                        class=\"px-4 py-2 bg-green-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-300\">\r\n                        OK\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DangerAlert;","const SoundOnOff = (props) => {\r\n    return (\r\n        <button className=\"rounded-full flex items-center justify-center bg-gray-700 text-white font-bold p-2 m-5\" onClick={props.handleClickAudio}>{props.audio ? <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\r\n        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" />\r\n        </svg>}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SoundOnOff;","const Refresh = (props) => {\r\n    return (\r\n        <button className=\"rounded-full m-5 bg-gray-700 p-2\" onClick={props.refreshPage}>\r\n            <svg className=\"h-6 w-6 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <polyline points=\"23 4 23 10 17 10\" />  <polyline points=\"1 20 1 14 7 14\" />  <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" /></svg>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Refresh;","const Quiz = (props) => {\r\n\r\n    const { currentTest, currentQuestion, isDisabled } = props;\r\n    return (\r\n        <>\r\n            <div className=\"p-8 text-2xl text-center bg-yellow-500 text-gray-800 rounded-full max-w-xl mx-auto m-5 font-bold\">\r\n                {currentTest[currentQuestion]?.question}\r\n                {currentTest[currentQuestion]?.image ? <img src={`./${currentTest[currentQuestion]?.image}`} alt=\"\" className=\"mx-auto\" /> : \"\"}\r\n            </div>\r\n            {props.children}\r\n            <div className=\"container max-w-md p-3 mx-auto\">\r\n                {currentTest[currentQuestion]?.content.map((answer, index) =>\r\n                    <button\r\n                        key={index}\r\n                        className=\"flex cursor-pointer m-5\"\r\n                        onClick={(el) => props.answerChange(index, el)}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        <div className={`flex items-center justify-center rounded-full bg-blue-500 p-5`}>\r\n                            <div className=\"rounded-full h-10 w-10 flex items-center justify-center bg-gray-700 text-white font-bold p-4\">\r\n                                {index + 1}\r\n                            </div>\r\n                            <div className=\"py-2 px-4 text-white font-semibold text-left\">\r\n                                {answer}\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;","export default __webpack_public_path__ + \"static/media/oklaski.a169772f.mp3\";","export default __webpack_public_path__ + \"static/media/smiech.474fb074.mp3\";","import Header from \"./components/header/Header\";\nimport LimitOfquestions from \"./components/limitOfquestions/LimitOfquestions\";\nimport DangerAlert from \"./components/alerts/DangerAlert\";\nimport SoundOnOff from \"./components/soundOnOff/SoundOnOff.js\";\nimport Refresh from \"./components/refreshQuiz/RefreshQuiz.js\";\nimport Quiz from \"./components/quiz/Quiz.js\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport oklaski from './sound/oklaski.mp3';\nimport smiech from './sound/smiech.mp3';\n\nfunction App() {\n\n  const [currentTest, setCurrentTest] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [maxQuestions, setMaxQuestions] = useState(0);\n  const [audio, setAudioOn] = useState(false);\n  const [correctAnswers, setCorectAnswers] = useState(0);\n  const [inCorrectAnswers, setInCorrectAnswers] = useState(0);\n  const [dangerAlert, setDangerAlert] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  // Losowanie pytań od 0 do długość tablicy\n\n  const draw = (arr, counter) => {\n    const arr2 = [...arr];\n    const arr3 = [];\n    if (arr2.length >= counter) {\n      for (let i = 0; i < counter; i++) {\n        let index = Math.floor(Math.random() * arr2.length);\n        arr3.push(arr2[index]);\n        arr2.splice(index, 1);\n      }\n    } else {\n      alert(\"Nie ma tyle pytań w puli\");\n      return;\n    }\n    return arr3;\n  }\n\n  const sound = new Audio(oklaski);\n  const sound2 = new Audio(smiech);\n\n  const answerChange = (answerUser, el) => {\n    if (currentQuestion >= maxQuestions) return;\n    setIsDisabled(true);\n    let answerDiv = el.currentTarget.firstChild;\n\n    if (answerUser === currentTest[currentQuestion].correct) {\n      if (audio) sound.play();\n      setCorectAnswers(correctAnswers + 1);\n      answerDiv.classList.add(\"current\");\n\n    } else {\n      if (audio) sound2.play();\n      answerDiv.classList.add(\"wrong\");\n      setDangerAlert(true);\n      if (inCorrectAnswers + correctAnswers < maxQuestions) {\n        setInCorrectAnswers(inCorrectAnswers + 1);\n      }\n    }\n\n    setTimeout(() => {\n      if (currentQuestion >= maxQuestions - 1) return;\n      setCurrentQuestion(currentQuestion + 1);\n      answerDiv.classList.remove(\"current\", \"wrong\");\n      setDangerAlert(false);\n      setIsDisabled(false);\n    }, 5000);\n  }\n\n  const handleChangeLimit = event => {\n    let { value, min, max } = event.target;\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n    if (value === 0) {\n      setMaxQuestions(\"\");\n      return;\n    }\n    setMaxQuestions(value)\n  };\n\n  const handleClickAudio = () => {\n    setAudioOn(!audio);\n  };\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  let colorSend = (() => {\n    if (Math.round(correctAnswers / maxQuestions * 100) >= 60) {\n      return \"current\";\n    }\n    return \"wrong\";\n  })();\n\n  useEffect(() => {\n    const getQuizData = async () => {\n      const response = await fetch('./questions.json');\n      const data = await response.json();\n      const drawData = draw(data.questions, data.questions.length);\n      setCurrentTest(drawData);\n      setMaxQuestions(data.questions.length);\n    }\n    getQuizData();\n  }, []);\n\n  return (\n    <div className=\"bg-container container mx-auto min-h-screen pb-5\">\n      <div className=\"flex items-baseline justify-center text-white flex-wrap bg-overlay-top\">\n        <LimitOfquestions handleChangeLimit={handleChangeLimit} maxQuestions={maxQuestions} currentTest={currentTest} />\n        <Header />\n        <SoundOnOff handleClickAudio={handleClickAudio} audio={audio} />\n        <Refresh refreshPage={refreshPage} />\n      </div>\n      <Quiz currentTest={currentTest} currentQuestion={currentQuestion} answerChange={answerChange} isDisabled={isDisabled}>\n        {dangerAlert ? <DangerAlert answers={currentTest[currentQuestion].content} corectAnswer={currentTest[currentQuestion].correct} /> : \"\"}\n      </Quiz>\n      <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\n        odpowiedzi {correctAnswers + inCorrectAnswers} / {maxQuestions}\n      </div>\n      <div className=\"flex items-baseline justify-center text-3xl bg-white rounded-full max-w-xs mx-auto m-5\">\n        <span style={{ color: 'green' }}>{correctAnswers}:</span><span style={{ color: 'red' }}>{inCorrectAnswers}</span>\n      </div>\n      <div className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full max-w-xs mx-auto m-5`}>{maxQuestions ? Math.round(correctAnswers / maxQuestions * 100) : \"\"}%</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}