{"version":3,"sources":["components/header/Header.js","components/limitOfquestions/LimitOfquestions.js","components/alerts/DangerAlert.js","components/alerts/SuccesAlert.js","components/alerts/EndTestAlert.js","components/soundOnOff/SoundOnOff.js","components/refreshQuiz/RefreshQuiz.js","components/quiz/Quiz.js","components/choiceTest/ChoiceTest.js","components/footer/Footer.js","components/wrongAnswers/WrongAnswers.js","sound/oklaski.mp3","sound/smiech.mp3","components/alerts/StartModal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","_jsx","className","children","limitOfquestions","maxQuestions","handleChangeLimit","_jsxs","htmlFor","type","id","value","onChange","min","max","currentTest","length","DangerAlert","answers","corectAnswer","nextQuestion","style","transform","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","AcceptAlert","Confetti","width","height","EndTestAlert","correctAnswers","inCorrectAnswers","colorSend","Math","round","color","concat","SoundOnOff","handleClickAudio","audio","xmlns","clipRule","Refresh","refreshPage","points","Quiz","_currentTest$currentQ","_currentTest$currentQ2","_currentTest$currentQ3","_currentTest$currentQ4","currentQuestion","isDisabled","answerChange","_Fragment","question","image","src","alt","content","map","answer","index","el","disabled","ChoiceTest","handleTest","test","questionslimit","name","checked","Footer","data","Date","getFullYear","href","target","rel","cx","cy","r","x1","y1","x2","y2","WrongAnswers","wrongAnswers","console","log","items","correct","StartModal","handleModal","open","customStyles","modal","display","border","button","justifyContent","header","fontSize","padding","marginTop","note","App","setCurrentTest","useState","setCurrentQuestion","setMaxQuestions","endTest","setEndTest","setAudioOn","setCorectAnswers","setInCorrectAnswers","saveInCorrectAnswers","setSaveInCorrectAnswers","dangerAlert","setDangerAlert","succesAlert","setSuccesAlert","setIsDisabled","setTest","allLimit","setAllLimit","inspiroLimit","setInspiroLimit","sygnalizacjaLimit","setSygnalizacjaLimit","liniaNr2Limit","setLiniaNr2Limit","skodaLimit","setSkodaLimit","setWrongAnswers","showWrongAnswers","setShowWrongAnswers","setModal","sound","Audio","oklaski","sound2","smiech","_document$querySelect","_document$querySelect2","document","querySelector","classList","remove","window","location","reload","useEffect","startApp","drawData","expr","draw","arr","counter","arr2","arr3","i","floor","random","push","splice","alert","async","response","fetch","json","all","inspiro","sygnalizacja","linia2","skoda","getQuizData","LimitOfquestions","event","Number","e","answerUser","answerDiv","currentTarget","play","add","SuccesAlert","alignItems","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11f77d48.chunk.js","sourcesContent":["const Header = (props) => {\r\n\r\n    return (\r\n        <header className=\"text-center\">\r\n            <h2 className=\"text-3xl p-5 md:text-4xl md:p-10 text-center\">Test okresowy dla maszynistów metra</h2>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","const limitOfquestions = (props) => {\r\n    const { maxQuestions, handleChangeLimit } = props;\r\n    return (\r\n        <div className=\"m-5\">\r\n            <label htmlFor=\"counter\" className=\"text-yellow-400 text-xl\">Ustaw ilość pytań z puli:</label>\r\n            <input className=\"block text-center rounded-3xl text-2xl text-black mt-3 m-auto\" type=\"number\" id=\"counter\" value={maxQuestions} onChange={handleChangeLimit} min=\"0\" max={props.currentTest.length} />\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default limitOfquestions;","const DangerAlert = (props) => {\r\n    const { answers, corectAnswer, nextQuestion } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"danger fixed left-1/2 top-1/2 p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-90\" style={{ transform: \"translate(-50%,-50%)\" }}>\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white animateBounce\">\r\n                    <svg className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"mt-2 px-7 py-3\">\r\n                    <p className=\" text-white text-xl\">\r\n                        Odp. prawidłowa nr. {corectAnswer + 1}\r\n                    </p>\r\n                    <p className=\" text-green-400 text-xl font-bold\">\r\n                        {answers[corectAnswer]}\r\n                    </p>\r\n                </div>\r\n                <div className=\"items-center px-4 py-3\">\r\n                    <button onClick={nextQuestion}\r\n                        id=\"ok-btn\"\r\n                        className=\"px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300\">\r\n                        Następne\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DangerAlert;","import Confetti from 'react-confetti';\r\nconst AcceptAlert = (props) => {\r\n    const { nextQuestion } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed left-1/2 top-1/2 p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-90 overflow-hidden\" style={{ transform: \"translate(-50%,-50%)\" }}>\r\n            <Confetti\r\n                width={300}\r\n                height={200}\r\n            />\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"relative mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white animateBounce\">\r\n                    <svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"items-center px-4 py-3 my-5\">\r\n                    <button onClick={nextQuestion}\r\n                        id=\"ok-btn\"\r\n                        className=\"px-4 py-2 bg-green-600 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-300\">\r\n                        Następne\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcceptAlert;","import Confetti from 'react-confetti';\r\nconst EndTestAlert = (props) => {\r\n    const { correctAnswers, inCorrectAnswers, maxQuestions, colorSend } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed left-1/2 top-1/2 p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-80 overflow-hidden\" style={{ transform: \"translate(-50%,-50%)\" }}>\r\n            <div className=\"mt-3 text-center\">\r\n                {(Math.round(correctAnswers / maxQuestions * 100) >= 75) ? <Confetti width=\"300\" /> : \"\"}\r\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white\">\r\n                    {(Math.round(correctAnswers / maxQuestions * 100) >= 75) ?\r\n                        <svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\r\n                        </svg>\r\n                        : <svg className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\r\n                        </svg>\r\n                    }\r\n                </div>\r\n                <h3 className=\"text-xl leading-6 font-medium text-white m-5\">{(Math.round(correctAnswers / maxQuestions * 100) >= 75) ? \"Zaliczone!!!\" : \"Oblałeś :(\"}</h3>\r\n                <div className=\"mt-2 px-7 py-3\">\r\n                    <div className=\" text-white text-xl\">\r\n                        <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\r\n                            {correctAnswers + inCorrectAnswers} / {maxQuestions}\r\n                        </div>\r\n                        <div className=\"flex items-baseline justify-center text-3xl bg-white rounded-full max-w-xs mx-auto m-5\">\r\n                            <span style={{ color: 'green' }}>{correctAnswers}:</span><span style={{ color: 'red' }}>{inCorrectAnswers}</span>\r\n                        </div>\r\n                        <div className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full max-w-xs mx-auto m-5`}>{Math.round(correctAnswers / maxQuestions * 100)}%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EndTestAlert;","const SoundOnOff = (props) => {\r\n    return (\r\n        <button className=\"rounded-full flex items-center justify-center bg-gray-700 text-white font-bold p-2 m-5 w-10 h-10\" onClick={props.handleClickAudio}>{props.audio ? <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\r\n        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" />\r\n        </svg>}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SoundOnOff;","const Refresh = (props) => {\r\n    return (\r\n        <button className=\"rounded-full m-5 bg-gray-700 p-2 w-10 h-10\" onClick={props.refreshPage}>\r\n            <svg className=\"h-6 w-6 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <polyline points=\"23 4 23 10 17 10\" />  <polyline points=\"1 20 1 14 7 14\" />  <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" /></svg>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Refresh;","const Quiz = (props) => {\r\n\r\n    const { currentTest, currentQuestion, isDisabled, answerChange } = props;\r\n    return (\r\n        <>\r\n            <div className=\"p-5 text-2xl text-center bg-yellow-500 text-gray-800 rounded-3xl max-w-xl mx-auto m-5 font-bold\">\r\n                {currentTest[currentQuestion]?.question}\r\n                <div className=\"my-5\">{currentTest[currentQuestion]?.image ? <img src={`./${currentTest[currentQuestion]?.image}`} alt=\"\" className=\"mx-auto\" /> : \"\"}</div>\r\n            </div>\r\n            {props.children}\r\n            <div className=\"container max-w-md p-3 mx-auto\">\r\n                {currentTest[currentQuestion]?.content.map((answer, index) =>\r\n                    <button\r\n                        key={index}\r\n                        className=\"flex cursor-pointer m-5 answer items-center justify-left rounded-3xl bg-blue-800 mx-auto w-full\"\r\n                        onClick={(el) => answerChange(index, el)}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        <div className=\"rounded-full h-10 w-10 flex items-center justify-center bg-blue-500 text-white p-4\">\r\n                            {index + 1}\r\n                        </div>\r\n                        <div className=\"py-2 px-4 text-white text-left\">\r\n                            {answer}\r\n                        </div>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;","const ChoiceTest = (props) => {\r\n  const { handleTest, test, questionslimit } = props;\r\n  return (\r\n    <form className=\"mt-4\">\r\n      <span className=\"text-yellow-400 text-xl\">Wybór zakresu pytań:</span>\r\n      <div className=\"mt-2\">\r\n        <label className=\"inline-flex items-center\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"form-radio\"\r\n            name=\"choiceTest\"\r\n            value=\"all\"\r\n            checked={test === \"all\"}\r\n            onChange={handleTest}\r\n          />\r\n          <span className=\"ml-2\">Wszystko ({questionslimit[0]})</span>\r\n        </label>\r\n        <label className=\"inline-flex items-center ml-3\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"form-radio\"\r\n            name=\"choiceTest\"\r\n            value=\"inspiro\"\r\n            checked={test === \"inspiro\"}\r\n            onChange={handleTest}\r\n          />\r\n          <span className=\"ml-2\">Inspiro ({questionslimit[1]})</span>\r\n        </label>\r\n        <label className=\"inline-flex items-center ml-3\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"form-radio\"\r\n            name=\"choiceTest\"\r\n            value=\"sygnalizacja\"\r\n            checked={test === \"sygnalizacja\"}\r\n            onChange={handleTest}\r\n          />\r\n          <span className=\"ml-2\">Sygnalizacja ({questionslimit[2]})</span>\r\n        </label>\r\n        <label className=\"inline-flex items-center ml-3\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"form-radio\"\r\n            name=\"choiceTest\"\r\n            value=\"linia2\"\r\n            checked={test === \"linia2\"}\r\n            onChange={handleTest}\r\n          />\r\n          <span className=\"ml-2\">Linia nr 2 ({questionslimit[3]})</span>\r\n        </label>\r\n        <label className=\"inline-flex items-center ml-3\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"form-radio\"\r\n            name=\"choiceTest\"\r\n            value=\"skoda\"\r\n            checked={test === \"skoda\"}\r\n            onChange={handleTest}\r\n          />\r\n          <span className=\"ml-2\">Skoda ({questionslimit[4]})</span>\r\n        </label>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChoiceTest;\r\n","const Footer = () => {\r\n    const data = new Date();\r\n    return (\r\n        <footer className=\"text-center text-white mt-8 text-opacity-20\" >\r\n            <p className=\"block text-xs\">* Test może zawierać błędne odpowiedzi.</p><p className=\"block text-xs\">Proszę o ich zgłaszanie.</p>\r\n            <p className=\"block\"> &copy; pablop76 2021 - {data.getFullYear()}<a href=\"mailto:pawelpoltoraczyk@gmail.com\" className=\"block\">@kontakt</a></p>\r\n            <a href=\"https://web-service.com.pl/\" target=\"_blank\" rel=\"noreferrer\"><svg className=\"inline-block mx-auto h-4 w-4 text-gray-700\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />  <circle cx=\"12\" cy=\"12\" r=\"9\" /><line x1=\"3.6\" y1=\"9\" x2=\"20.4\" y2=\"9\" /><line x1=\"3.6\" y1=\"15\" x2=\"20.4\" y2=\"15\" /><path d=\"M11.5 3a17 17 0 0 0 0 18\" />  <path d=\"M12.5 3a17 17 0 0 1 0 18\" /></svg>web-service</a>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","const WrongAnswers = (props) => {\r\n    const { wrongAnswers } = props;\r\n    console.log(wrongAnswers);\r\n\r\n    const items = wrongAnswers.map((el, index) => {\r\n        return <li key={`wrongAnswer${index}`} className={\"m-3 text-left\"}>\r\n            <h3 className={\"text-xl\"}>{el.question}</h3>\r\n            {el.image ? <img src={el.image} alt=\"\" className={\"mx-auto\"} /> : \"\"}\r\n            <p className={\"text-green-300 text-xl m-2\"}>{el.content[el.correct]}</p></li>\r\n    })\r\n    return (\r\n        <div className={\"text-white m-auto bg-blue-800 text-center p-5 rounded-3xl\"}>\r\n            {wrongAnswers.length ? <h2 className={\"text-2xl text-red-600 p-4\"}>Błędne odpowiedzi</h2> : <h2 className={\"text-2xl text-green-300 p-4\"} > Wszystkie odpowiedzi były prawidłowe. GRATULACJE!!!</h2>}\r\n            <ol>\r\n                {items}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WrongAnswers;","export default __webpack_public_path__ + \"static/media/oklaski.a169772f.mp3\";","export default __webpack_public_path__ + \"static/media/smiech.474fb074.mp3\";","const StartModal = (props) => {\r\n\r\n    const { handleModal, open } = props;\r\n\r\n    const customStyles = {\r\n        modal: {\r\n            display: open,\r\n            border: \"1px solid #FFF\"\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\"\r\n        },\r\n        header: {\r\n            fontSize: \"22px\",\r\n            color: \"#FFF\",\r\n            padding: \"20px\"\r\n        },\r\n        content: {\r\n            marginTop: \"20px\",\r\n            padding: \"20px\"\r\n        },\r\n        note:{\r\n            padding: \"20px\",\r\n            fontSize:\"22px\",\r\n            color: \"red\"\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"startModal\" style={customStyles.modal}>\r\n            <div style={customStyles.button}>\r\n                <button onClick={handleModal}><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" width=\"48\" fill=\"#FFFFFF\"><path d=\"M16.7 32.1 24 24.8 31.3 32.1 32.1 31.3 24.8 24 32.1 16.7 31.3 15.9 24 23.2 16.7 15.9 15.9 16.7 23.2 24 15.9 31.3ZM24 41.4Q20.35 41.4 17.175 40.05Q14 38.7 11.65 36.35Q9.3 34 7.95 30.825Q6.6 27.65 6.6 24Q6.6 20.35 7.95 17.175Q9.3 14 11.65 11.65Q14 9.3 17.175 7.95Q20.35 6.6 24 6.6Q27.65 6.6 30.825 7.95Q34 9.3 36.35 11.65Q38.7 14 40.05 17.175Q41.4 20.35 41.4 24Q41.4 27.65 40.05 30.825Q38.7 34 36.35 36.35Q34 38.7 30.825 40.05Q27.65 41.4 24 41.4ZM24 24Q24 24 24 24Q24 24 24 24Q24 24 24 24Q24 24 24 24Q24 24 24 24Q24 24 24 24Q24 24 24 24Q24 24 24 24ZM24 40.3Q30.75 40.3 35.525 35.525Q40.3 30.75 40.3 24Q40.3 17.25 35.525 12.475Q30.75 7.7 24 7.7Q17.25 7.7 12.475 12.475Q7.7 17.25 7.7 24Q7.7 30.75 12.475 35.525Q17.25 40.3 24 40.3Z\" /></svg></button>\r\n            </div>\r\n            <header>\r\n                <h1 style={customStyles.header}>TEST WIEDZY NA STANOWISKU MASZYNISTY METRA</h1>\r\n            </header>\r\n            <div style={customStyles.content}>\r\n                Jeżeli pamiętasz jakieś pytania egzaminacyjne, które się nie pojawiły, lub znalazłeś błąd w teście to\r\n                <a href=\"mailto:pawelpoltoraczyk@gmail.com\"> DAJ ZNAĆ <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" fill=\"#FFFFFF\"><path d=\"M4 20Q3.175 20 2.588 19.413Q2 18.825 2 18V6Q2 5.175 2.588 4.588Q3.175 4 4 4H20Q20.825 4 21.413 4.588Q22 5.175 22 6V18Q22 18.825 21.413 19.413Q20.825 20 20 20ZM12 13 4 8V18Q4 18 4 18Q4 18 4 18H20Q20 18 20 18Q20 18 20 18V8ZM12 11 20 6H4ZM4 8V6V8V18Q4 18 4 18Q4 18 4 18Q4 18 4 18Q4 18 4 18Z\" /></svg></a>\r\n            </div>\r\n            <div style={customStyles.note}>\r\n                Nadchodzą zmiany!!!\r\n                <p>Już niedługo w teście nie będzie można zrobić żadnego błędu z sygnalizacji.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartModal;","import Header from \"./components/header/Header\";\r\nimport LimitOfquestions from \"./components/limitOfquestions/LimitOfquestions\";\r\nimport DangerAlert from \"./components/alerts/DangerAlert\";\r\nimport SuccesAlert from \"./components/alerts/SuccesAlert\";\r\nimport EndTestAlert from \"./components/alerts/EndTestAlert\";\r\nimport SoundOnOff from \"./components/soundOnOff/SoundOnOff.js\";\r\nimport Refresh from \"./components/refreshQuiz/RefreshQuiz.js\";\r\nimport Quiz from \"./components/quiz/Quiz.js\";\r\nimport ChoiceTest from \"./components/choiceTest/ChoiceTest\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport WrongAnswers from \"./components/wrongAnswers/WrongAnswers\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport oklaski from \"./sound/oklaski.mp3\";\r\nimport smiech from \"./sound/smiech.mp3\";\r\nimport StartModal from \"./components/alerts/StartModal\";\r\n\r\nfunction App() {\r\n  const [currentTest, setCurrentTest] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [maxQuestions, setMaxQuestions] = useState(0);\r\n  const [endTest, setEndTest] = useState(false);\r\n  const [audio, setAudioOn] = useState(false);\r\n  const [correctAnswers, setCorectAnswers] = useState(0);\r\n  const [inCorrectAnswers, setInCorrectAnswers] = useState(0);\r\n  const [saveInCorrectAnswers, setSaveInCorrectAnswers] = useState([]);\r\n  const [dangerAlert, setDangerAlert] = useState(false);\r\n  const [succesAlert, setSuccesAlert] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [test, setTest] = useState(\"all\");\r\n  const [allLimit, setAllLimit] = useState(0);\r\n  const [inspiroLimit, setInspiroLimit] = useState(0);\r\n  const [sygnalizacjaLimit, setSygnalizacjaLimit] = useState(0);\r\n  const [liniaNr2Limit, setLiniaNr2Limit] = useState(0);\r\n  const [skodaLimit, setSkodaLimit] = useState(0);\r\n  // zapisuje błedne odpowiedzi ale jeszcze nic z nimi nie robi\r\n  const [wrongAnswers, setWrongAnswers] = useState([]);\r\n  const [showWrongAnswers, setShowWrongAnswers] = useState(false);\r\n  const [open, setModal] = useState(\"block\");\r\n  // ustawienie tematu testu\r\n  const handleTest = (e) => {\r\n    setTest(e.target.value);\r\n  };\r\n\r\n  const handleModal = () => {\r\n    setModal(\"none\");\r\n  };\r\n\r\n  // Losowanie pytań od 0 do długość tablicy\r\n  const draw = (arr, counter) => {\r\n    const arr2 = [...arr];\r\n    const arr3 = [];\r\n    if (arr2.length >= counter) {\r\n      for (let i = 0; i < counter; i++) {\r\n        let index = Math.floor(Math.random() * arr2.length);\r\n        arr3.push(arr2[index]);\r\n        arr2.splice(index, 1);\r\n      }\r\n    } else {\r\n      alert(\"Nie ma tyle pytań w puli\");\r\n      return;\r\n    }\r\n    return arr3;\r\n  };\r\n  const sound = new Audio(oklaski);\r\n  const sound2 = new Audio(smiech);\r\n\r\n  const answerChange = (answerUser, el) => {\r\n    if (currentQuestion >= maxQuestions + 1) return;\r\n    setIsDisabled(true);\r\n    let answerDiv = el.currentTarget;\r\n\r\n    if (answerUser === currentTest[currentQuestion].correct) {\r\n      if (audio) sound.play();\r\n      setCorectAnswers(correctAnswers + 1);\r\n      answerDiv.classList.add(\"current\");\r\n      setSuccesAlert(true);\r\n    } else {\r\n      if (audio) sound2.play();\r\n      answerDiv.classList.add(\"wrong\");\r\n      setDangerAlert(true);\r\n      if (inCorrectAnswers + correctAnswers < maxQuestions) {\r\n        setInCorrectAnswers(inCorrectAnswers + 1);\r\n        // zbieranie niepoprawnych odpowiedzi\r\n        setSaveInCorrectAnswers([\r\n          ...saveInCorrectAnswers,\r\n          currentTest[currentQuestion],\r\n        ]);\r\n      }\r\n      setWrongAnswers([...wrongAnswers, currentTest[currentQuestion]]);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (currentQuestion + 1 === maxQuestions) {\r\n      setDangerAlert(false);\r\n      setSuccesAlert(false);\r\n      setEndTest(true);\r\n      return;\r\n    }\r\n    setCurrentQuestion(currentQuestion + 1);\r\n    document.querySelector(\".wrong\")?.classList.remove(\"wrong\");\r\n    document.querySelector(\".current\")?.classList.remove(\"current\");\r\n    setDangerAlert(false);\r\n    setSuccesAlert(false);\r\n    setIsDisabled(false);\r\n  };\r\n\r\n  const handleChangeLimit = (event) => {\r\n    let { value, min, max } = event.target;\r\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\r\n    if (value === 0) {\r\n      setMaxQuestions(\"\");\r\n      return;\r\n    }\r\n    setMaxQuestions(value);\r\n  };\r\n\r\n  const handleClickAudio = () => {\r\n    setAudioOn(!audio);\r\n  };\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  let colorSend = (() => {\r\n    if (Math.round((correctAnswers / maxQuestions) * 100) >= 75) {\r\n      return \"bg-green-700\";\r\n    }\r\n    return \"bg-red-600\";\r\n  })();\r\n\r\n  useEffect(() => {\r\n    const startApp = (data, drawData, expr) => {\r\n      drawData = draw(data[expr], data[expr].length);\r\n      setCurrentTest(drawData);\r\n      setMaxQuestions(data[expr].length);\r\n      setCorectAnswers(0);\r\n      setInCorrectAnswers(0);\r\n    };\r\n    const getQuizData = async (expr) => {\r\n      const response = await fetch(\"./questions.json\");\r\n      const data = await response.json();\r\n      setAllLimit(data.all.length);\r\n      setInspiroLimit(data.inspiro.length);\r\n      setSygnalizacjaLimit(data.sygnalizacja.length);\r\n      setLiniaNr2Limit(data.linia2.length);\r\n      setSkodaLimit(data.skoda.length);\r\n\r\n      let drawData = [];\r\n      switch (expr) {\r\n        case \"inspiro\":\r\n          startApp(data, drawData, expr);\r\n          break;\r\n        case \"sygnalizacja\":\r\n          startApp(data, drawData, expr);\r\n          break;\r\n        case \"linia2\":\r\n          startApp(data, drawData, expr);\r\n          break;\r\n        case \"skoda\":\r\n          startApp(data, drawData, expr);\r\n          break;\r\n        default:\r\n          startApp(data, drawData, expr);\r\n      }\r\n    };\r\n    getQuizData(test);\r\n  }, [test]);\r\n\r\n  return (\r\n    <div className=\"bg-container container mx-auto min-h-screen pb-5 flex flex-col content-center justify-center text-blue-50\">\r\n      <StartModal handleModal={handleModal} open={open} />\r\n      <Header />\r\n      <div className=\"flex justify-center\">\r\n        <SoundOnOff handleClickAudio={handleClickAudio} audio={audio} />\r\n        <Refresh refreshPage={refreshPage} />\r\n      </div>\r\n      <div className=\"flex justify-center text-white flex-wrap bg-overlay-top flex-grow\">\r\n        <div className=\"text-center\">\r\n          <LimitOfquestions\r\n            handleChangeLimit={handleChangeLimit}\r\n            maxQuestions={maxQuestions}\r\n            currentTest={currentTest}\r\n          >\r\n            <ChoiceTest\r\n              handleTest={handleTest}\r\n              test={test}\r\n              questionslimit={[\r\n                allLimit,\r\n                inspiroLimit,\r\n                sygnalizacjaLimit,\r\n                liniaNr2Limit,\r\n                skodaLimit,\r\n              ]}\r\n            />\r\n          </LimitOfquestions>\r\n        </div>\r\n      </div>\r\n      {showWrongAnswers ? (\r\n        <WrongAnswers wrongAnswers={wrongAnswers} />\r\n      ) : (\r\n        <Quiz\r\n          currentTest={currentTest}\r\n          currentQuestion={currentQuestion}\r\n          answerChange={answerChange}\r\n          isDisabled={isDisabled}\r\n        >\r\n          {dangerAlert ? (\r\n            <DangerAlert\r\n              answers={currentTest[currentQuestion].content}\r\n              corectAnswer={currentTest[currentQuestion].correct}\r\n              nextQuestion={nextQuestion}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {succesAlert ? <SuccesAlert nextQuestion={nextQuestion} /> : \"\"}\r\n          {endTest ? (\r\n            <EndTestAlert\r\n              correctAnswers={correctAnswers}\r\n              inCorrectAnswers={inCorrectAnswers}\r\n              maxQuestions={maxQuestions}\r\n              colorSend={colorSend}\r\n            >\r\n              <div className={\"mx-auto\"}>\r\n                <Refresh refreshPage={refreshPage} />\r\n              </div>\r\n              <button\r\n                className={\r\n                  \"bg-blue-700 hover:bg-blue-500 text-white font-bold py-2 px-4 rounded\"\r\n                }\r\n                onClick={() => {\r\n                  setShowWrongAnswers(true);\r\n                  setEndTest(false);\r\n                }}\r\n              >\r\n                Pokaż błędne odpowiedzi\r\n              </button>\r\n            </EndTestAlert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          ;\r\n        </Quiz>\r\n      )}\r\n      <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\r\n        odpowiedzi {correctAnswers + inCorrectAnswers} / {maxQuestions}\r\n      </div>\r\n      <div className=\"flex items-center justify-center text-3xl bg-white rounded-full w-auto p-2 m-5 mx-auto\">\r\n        <span style={{ color: \"green\", display: \"flex\", alignItems: \"center\" }}>\r\n          <svg\r\n            className=\"h-8 w-8 text-green-600\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\"\r\n            />\r\n          </svg>\r\n          {correctAnswers}:\r\n        </span>\r\n        <span style={{ color: \"red\", display: \"flex\", alignItems: \"center\" }}>\r\n          {inCorrectAnswers}\r\n          <svg\r\n            className=\"h-8 w-8 text-red-500\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div\r\n        className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full w-32 m-5 mx-auto p-2`}\r\n      >\r\n        {maxQuestions ? Math.round((correctAnswers / maxQuestions) * 100) : \"\"}%\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}