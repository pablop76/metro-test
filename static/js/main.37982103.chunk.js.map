{"version":3,"sources":["components/header/Header.js","components/limitOfquestions/LimitOfquestions.js","components/alerts/DangerAlert.js","components/alerts/SuccesAlert.js","components/alerts/EndTestAlert.js","components/soundOnOff/SoundOnOff.js","components/refreshQuiz/RefreshQuiz.js","components/quiz/Quiz.js","sound/oklaski.mp3","sound/smiech.mp3","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","limitOfquestions","maxQuestions","handleChangeLimit","htmlFor","type","id","value","onChange","min","max","currentTest","length","DangerAlert","answers","corectAnswer","nextQuestion","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","AcceptAlert","EndTestAlert","correctAnswers","inCorrectAnswers","colorSend","Math","round","style","color","SoundOnOff","handleClickAudio","audio","xmlns","clipRule","Refresh","refreshPage","points","Quiz","currentQuestion","isDisabled","answerChange","question","image","src","alt","children","content","map","answer","index","el","disabled","App","useState","setCurrentTest","setCurrentQuestion","setMaxQuestions","endTest","setEndTest","setAudioOn","setCorectAnswers","setInCorrectAnswers","dangerAlert","setDangerAlert","succesAlert","setSuccesAlert","setIsDisabled","draw","arr","counter","arr2","arr3","i","floor","random","push","splice","alert","sound","Audio","oklaski","sound2","smiech","document","querySelector","classList","remove","useEffect","getQuizData","a","fetch","response","json","data","drawData","questions","LimitOfquestions","event","target","Number","window","location","reload","answerUser","answerDiv","currentTarget","correct","play","add","SuccesAlert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37982103.chunk.js","sourcesContent":["const Header = (props) => {\r\n    return (\r\n        <header className=\"text-center\">\r\n            <h2 className=\"text-3xl p-5 md:text-4xl md:p-10 text-center\">Test okresowy dla maszynistów metra</h2>\r\n            <p className=\"block text-xl\">Test może zawierać błedne odpowiedzi(!?)</p>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","const limitOfquestions = (props) => {\r\n    const { maxQuestions, handleChangeLimit } = props;\r\n    return (\r\n        <div className=\"m-5\">\r\n            <label htmlFor=\"counter\" className=\"text-xl\">Ustaw ilość pytań</label>\r\n            <input className=\"block text-center rounded-3xl text-2xl text-black mt-3 m-auto\" type=\"number\" id=\"counter\" value={maxQuestions} onChange={handleChangeLimit} min=\"0\" max={props.currentTest.length} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default limitOfquestions;","const DangerAlert = (props) => {\r\n    const { answers, corectAnswer, nextQuestion } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"relative top-20 mx-auto p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-80\">\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white\">\r\n                    <svg className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"mt-2 px-7 py-3\">\r\n                    <p className=\" text-white text-xl\">\r\n                        Prawidłową odpowiedźią jest nr. {corectAnswer + 1}\r\n                    </p>\r\n                    <p className=\" text-green-400 text-xl font-bold\">\r\n                        {answers[corectAnswer]}\r\n                    </p>\r\n                </div>\r\n                <div className=\"items-center px-4 py-3\">\r\n                    <button onClick={nextQuestion}\r\n                        id=\"ok-btn\"\r\n                        className=\"px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300\">\r\n                        Następne\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DangerAlert;","const AcceptAlert = (props) => {\r\n    const { nextQuestion } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"relative top-20 mx-auto p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-80\">\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white\">\r\n                    <svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"items-center px-4 py-3 my-5\">\r\n                    <button onClick={nextQuestion}\r\n                        id=\"ok-btn\"\r\n                        className=\"px-4 py-2 bg-green-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-300\">\r\n                        Następne\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcceptAlert;","const EndTestAlert = (props) => {\r\n    const { correctAnswers, inCorrectAnswers, maxQuestions, colorSend } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"relative top-20 mx-auto p-5 border w-80 shadow-lg rounded-md bg-blue-500 bg-opacity-80\">\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-white\">\r\n                    {(Math.round(correctAnswers / maxQuestions * 100) >= 75) ?\r\n                        <svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\r\n                        </svg>\r\n                        : <svg className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\r\n                        </svg>\r\n                    }\r\n                </div>\r\n                <h3 className=\"text-xl leading-6 font-medium text-white m-5\">{(Math.round(correctAnswers / maxQuestions * 100) >= 75) ? \"Zaliczone!!!\" : \"Oblałeś :(\"}</h3>\r\n                <div className=\"mt-2 px-7 py-3\">\r\n                    <div className=\" text-white text-xl\">\r\n                        <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\r\n                            odpowiedzi {correctAnswers + inCorrectAnswers} / {maxQuestions}\r\n                        </div>\r\n                        <div className=\"flex items-baseline justify-center text-3xl bg-white rounded-full max-w-xs mx-auto m-5\">\r\n                            <span style={{ color: 'green' }}>{correctAnswers}:</span><span style={{ color: 'red' }}>{inCorrectAnswers}</span>\r\n                        </div>\r\n                        <div className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full max-w-xs mx-auto m-5`}>{Math.round(correctAnswers / maxQuestions * 100)}%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EndTestAlert;","const SoundOnOff = (props) => {\r\n    return (\r\n        <button className=\"rounded-full flex items-center justify-center bg-gray-700 text-white font-bold p-2 m-5\" onClick={props.handleClickAudio}>{props.audio ? <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\r\n        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" />\r\n        </svg>}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SoundOnOff;","const Refresh = (props) => {\r\n    return (\r\n        <button className=\"rounded-full m-5 bg-gray-700 p-2\" onClick={props.refreshPage}>\r\n            <svg className=\"h-6 w-6 text-white\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <polyline points=\"23 4 23 10 17 10\" />  <polyline points=\"1 20 1 14 7 14\" />  <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" /></svg>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Refresh;","const Quiz = (props) => {\r\n\r\n    const { currentTest, currentQuestion, isDisabled, answerChange } = props;\r\n    return (\r\n        <>\r\n            <div className=\"p-8 text-2xl text-center bg-yellow-500 text-gray-800 rounded-full max-w-xl mx-auto m-5 font-bold\">\r\n                {currentTest[currentQuestion]?.question}\r\n                {currentTest[currentQuestion]?.image ? <img src={`./${currentTest[currentQuestion]?.image}`} alt=\"\" className=\"mx-auto\" /> : \"\"}\r\n            </div>\r\n            {props.children}\r\n            <div className=\"container max-w-md p-3 mx-auto\">\r\n                {currentTest[currentQuestion]?.content.map((answer, index) =>\r\n                    <button\r\n                        key={index}\r\n                        className=\"flex cursor-pointer m-5 answer items-center justify-center rounded-full bg-blue-500\"\r\n                        onClick={(el) => answerChange(index, el)}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        <div className=\"rounded-full h-10 w-10 flex items-center justify-center bg-gray-700 text-white font-bold p-4\">\r\n                            {index + 1}\r\n                        </div>\r\n                        <div className=\"py-2 px-4 text-white font-semibold text-left\">\r\n                            {answer}\r\n                        </div>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;","export default __webpack_public_path__ + \"static/media/oklaski.a169772f.mp3\";","export default __webpack_public_path__ + \"static/media/smiech.474fb074.mp3\";","import Header from \"./components/header/Header\";\nimport LimitOfquestions from \"./components/limitOfquestions/LimitOfquestions\";\nimport DangerAlert from \"./components/alerts/DangerAlert\";\nimport SuccesAlert from \"./components/alerts/SuccesAlert\";\nimport EndTestAlert from \"./components/alerts/EndTestAlert\";\nimport SoundOnOff from \"./components/soundOnOff/SoundOnOff.js\";\nimport Refresh from \"./components/refreshQuiz/RefreshQuiz.js\";\nimport Quiz from \"./components/quiz/Quiz.js\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport oklaski from './sound/oklaski.mp3';\nimport smiech from './sound/smiech.mp3';\n\nfunction App() {\n\n  const [currentTest, setCurrentTest] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [maxQuestions, setMaxQuestions] = useState(0);\n  const [endTest, setEndTest] = useState(false);\n  const [audio, setAudioOn] = useState(false);\n  const [correctAnswers, setCorectAnswers] = useState(0);\n  const [inCorrectAnswers, setInCorrectAnswers] = useState(0);\n  const [dangerAlert, setDangerAlert] = useState(false);\n  const [succesAlert, setSuccesAlert] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  // Losowanie pytań od 0 do długość tablicy\n\n  const draw = (arr, counter) => {\n    const arr2 = [...arr];\n    const arr3 = [];\n    if (arr2.length >= counter) {\n      for (let i = 0; i < counter; i++) {\n        let index = Math.floor(Math.random() * arr2.length);\n        arr3.push(arr2[index]);\n        arr2.splice(index, 1);\n      }\n    } else {\n      alert(\"Nie ma tyle pytań w puli\");\n      return;\n    }\n    return arr3;\n  }\n\n  const sound = new Audio(oklaski);\n  const sound2 = new Audio(smiech);\n\n  const answerChange = (answerUser, el) => {\n\n    if (currentQuestion >= maxQuestions + 1) return;\n    setIsDisabled(true);\n    let answerDiv = el.currentTarget;\n\n    if (answerUser === currentTest[currentQuestion].correct) {\n      if (audio) sound.play();\n      setCorectAnswers(correctAnswers + 1);\n      answerDiv.classList.add(\"current\");\n      setSuccesAlert(true);\n\n    } else {\n      if (audio) sound2.play();\n      answerDiv.classList.add(\"wrong\");\n      setDangerAlert(true);\n      if (inCorrectAnswers + correctAnswers < maxQuestions) {\n        setInCorrectAnswers(inCorrectAnswers + 1);\n      }\n    }\n\n  }\n\n  const nextQuestion = () => {\n    if (currentQuestion + 1 === maxQuestions) {\n      setDangerAlert(false);\n      setSuccesAlert(false);\n      setEndTest(true);\n      return;\n    };\n    setCurrentQuestion(currentQuestion + 1);\n    document.querySelector(\".wrong\")?.classList.remove(\"wrong\");\n    document.querySelector(\".current\")?.classList.remove(\"current\");\n    setDangerAlert(false);\n    setSuccesAlert(false);\n    setIsDisabled(false);\n  }\n\n  const handleChangeLimit = event => {\n    let { value, min, max } = event.target;\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n    if (value === 0) {\n      setMaxQuestions(\"\");\n      return;\n    }\n    setMaxQuestions(value)\n  };\n\n  const handleClickAudio = () => {\n    setAudioOn(!audio);\n  };\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  let colorSend = (() => {\n    if (Math.round(correctAnswers / maxQuestions * 100) >= 67) {\n      return \"bg-green-700\";\n    }\n    return \"bg-red-600\";\n  })();\n\n  useEffect(() => {\n    const getQuizData = async () => {\n      const response = await fetch('./questions.json');\n      const data = await response.json();\n      const drawData = draw(data.questions, data.questions.length);\n      setCurrentTest(drawData);\n      setMaxQuestions(data.questions.length);\n    }\n    getQuizData();\n  }, []);\n\n  return (\n    <div className=\"bg-container container mx-auto min-h-screen pb-5\">\n      <div className=\"flex items-baseline justify-center text-white flex-wrap bg-overlay-top\">\n        <LimitOfquestions handleChangeLimit={handleChangeLimit} maxQuestions={maxQuestions} currentTest={currentTest} />\n        <Header />\n        <SoundOnOff handleClickAudio={handleClickAudio} audio={audio} />\n        <Refresh refreshPage={refreshPage} />\n      </div>\n      <Quiz currentTest={currentTest} currentQuestion={currentQuestion} answerChange={answerChange} isDisabled={isDisabled}>\n        {dangerAlert ? <DangerAlert answers={currentTest[currentQuestion].content} corectAnswer={currentTest[currentQuestion].correct} nextQuestion={nextQuestion} /> : \"\"}\n        {succesAlert ? <SuccesAlert nextQuestion={nextQuestion} /> : \"\"}\n        {endTest ? <EndTestAlert correctAnswers={correctAnswers} inCorrectAnswers={inCorrectAnswers} maxQuestions={maxQuestions} colorSend={colorSend} /> : \"\"};\n      </Quiz>\n      <div className=\"flex justify-center p-5 text-2xl bg-blue-800 text-white rounded-full max-w-xs mx-auto m-5\">\n        odpowiedzi {correctAnswers + inCorrectAnswers} / {maxQuestions}\n      </div>\n      <div className=\"flex items-baseline justify-center text-3xl bg-white rounded-full max-w-xs mx-auto m-5\">\n        <span style={{ color: 'green' }}>{correctAnswers}:</span><span style={{ color: 'red' }}>{inCorrectAnswers}</span>\n      </div>\n      <div className={`flex items-baseline justify-center text-4xl ${colorSend} text-white rounded-full max-w-xs mx-auto m-5`}>{maxQuestions ? Math.round(correctAnswers / maxQuestions * 100) : \"\"}%</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}